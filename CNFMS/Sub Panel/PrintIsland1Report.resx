<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="backButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAA2tJREFUeF7t
        mstuTVEch09FtDUwlBAxoWpA3ZqSMOtA2xAPIEZS+gaGJkZKU1EMPIBEPICkGLVE3KcobTCqWwRxr++3
        z78n0g7sy1pr792zv+RLzu1/Obe911p71SoqKioqKvwyNze3GYfwEt7EKXyPP0zdfo567iIex04LLye8
        ge04gq8xLa/wLG6ztMWGRlvwIN5B19zGA9hi5YoFjfXgPfTNXey2svlDM+14Hn9jKFTrHLZZG/lAA534
        BPPiEXZYO2Gh8G58qy5yRmeQfdZWGCjYj19VvSB8wT5rzy8U2oOfVbVg6Avx+0uggP7zH1StoLxDP8cE
        ErfhQ1UpODoot1vb7iDpWJS+HIxa224gYTf+ilKXA40Teqz9bJBIw9sQIzzXaDiefdhMEo3tXfEJj+Kb
        6J5/+u1tpIckriY2P3HAcq5BTW58Mxm9ibSQQFNaVwxZ2gjur8Dr0TN+6bKSySFY83kXDFvKBjy2HnXe
        9s2i2rEhOMtixjzXcJmljOC+vn1Na0MwY2WTQaCWsbKis8dKS9mAx1z9suKy0UrHhyCt4WVB636rLV0D
        HtNZ5Y9eEJBjVj4+BGkBMy0fcYulasBj6zCPKfSYtRAfgm7VYxOjVd5eS9OAx5bjhF6QA+PWRnwIelmP
        TYR+2kcsxSJ4bhWuxU24C3vxEB5GLYWfwFM4ipfxKupUqQ/uMepvpTPHd0zClLUQH4LS/FRPWrh3rF5c
        Zi0sPgQl/ZSvYLAl63rJ2HyzsPgQ1PQfQNP/BV7UYxOxpA6CTX8abPqBkH6SWSjSUHjQyseHIC2BZ6W8
        kyFBoK7PZyXv6fC0lU0Owdqc4II8F0ROW8nkELwUlsS2Wsl0kMDV4mUei6IT0ZvIAkm0LcUVoZfFs18x
        JokujIQ6YLkk25L4v5BMw9YyXRpTrzusfTeQUHtyysKIte0Okrbigyh9sfFzeVyQuANDnLvTonnGBmvX
        DxTQ5qiibpHZa236hUJ9qI1JRUG97Lf2wkBB7QydVfWc0Ta5MN/8QiisY0Ke+4buo9///P+gAW2e0hJW
        yHGCamlK3Wpt5A/N7EQfu8QXMoluBzkuobkBa9I1Wk8MsxvUBTTbhWdwBtMyjcOYbUqbN7wBHSwH8QLe
        wGc4v7wtdfspjqNeo9emW8aqqKioqKiISa32F9HSF/uLRDb/AAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="SaveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>